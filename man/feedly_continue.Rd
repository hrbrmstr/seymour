% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feedly-continue.R
\name{feedly_continue}
\alias{feedly_continue}
\title{Helper function to iterate through a \code{\link[=feedly_stream]{feedly_stream()}} result set}
\usage{
feedly_continue(start, max = 0L, .progress = FALSE)
}
\arguments{
\item{start}{the result of a first call to \code{\link[=feedly_stream]{feedly_stream()}}}

\item{max}{max further \code{continuation} iterations to follow. If \code{max} equals
\code{0} (the default) this function will iterate until there are no more
results.}

\item{progress}{if \code{TRUE} then display simple progress as the API calls are
made. Default is \code{FALSE}.}
}
\description{
The \code{\link[=feedly_stream]{feedly_stream()}} function will return a \code{continuation} field if
there are more results than the max asked for. You can use this function
to iterate \code{max} more times (or less if there are fewer than \code{n} additional
result sets to retrieve).
}
\examples{
r_bloggers_feed_id <- "feed/http://feeds.feedburner.com/RBloggers"

feedly_stream(r_bloggers_feed_id, count = 1000L) \%>\%
  feedly_continue(rb_stream, 2) -> rb_stream
}
